!function(t){"use strict";const e=[{name:"base58",charset:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"},{name:"base64",charset:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},{name:"base64url",charset:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"}];function n(t){for(const n of e)if(n.name===t)return n.charset;throw TypeError("Charset does not exist: "+t)}const r={encode:function(t,e,r=!1){const o=n(e),s=o.length,i=[];let c,a,u,f="",l=0;for(c=0;c<t.length;c++)for(l=0,a=t[c],f+=a>0||(f.length^c)>0?"":"1";l in i||a>0;)u=i[l],u=u>0?256*u+a:a,a=u/s|0,i[l]=u%s,l++;for(;l-- >0;)f+=o[i[l]];return r&&f.length%4>0?f+"=".repeat(4-f.length%4):f},decode:function(t,e){const r=n(e),o=r.length,s=[],i=[];t=t.replace("=","");let c,a,u,f=0;for(c=0;c<t.length;c++){if(f=0,a=r.indexOf(t[c]),a<0)throw new Error(`Character range out of bounds: ${a}`);for(c=a>0||(i.length^c)>0?c:i.push(0);f in s||a>0;)u=s[f],u=u>0?u*o+a:a,a=u>>8,s[f]=u%256,f++}for(;f-- >0;)i.push(s[f]);return Uint8Array.from(i)}},o="qpzry9x8gf2tvdw0s3jn54khce6mua7l",s=[996825010,642813549,513874426,1027748829,705979059],i="bech32",c="bech32m";function a(t){switch(t){case i:return 1;case c:return 734539939;default:throw new Error(`Unrecognized encoding: ${t}`)}}function u(t){let e=1;for(let n=0;n<t.length;++n){const r=e>>25;e=(33554431&e)<<5^t[n];for(let t=0;t<5;++t)(r>>t&1)>0&&(e^=s[t])}return e}function f(t){const e=[];let n;for(n=0;n<t.length;++n)e.push(t.charCodeAt(n)>>5);for(e.push(0),n=0;n<t.length;++n)e.push(31&t.charCodeAt(n));return e}function l(t,e,n,r=!0){const o=[];let s=0,i=0;const c=(1<<n)-1,a=(1<<e+n-1)-1;for(const r of t){if(r<0||r>>e>0)return[];for(s=(s<<e|r)&a,i+=e;i>=n;)i-=n,o.push(s>>i&c)}if(r)i>0&&o.push(s<<n-i&c);else if(i>=e||(s<<n-i&c)>0)return[];return o}function h(t,e,n){const r=e.concat(function(t,e,n){const r=u(f(t).concat(e).concat([0,0,0,0,0,0]))^a(n),o=[];for(let t=0;t<6;++t)o.push(r>>5*(5-t)&31);return o}(t,e,n));let s=t+"1";for(let t=0;t<r.length;++t)s+=o.charAt(r[t]);return s}function p(t,e){const n=e>0?"bech32m":"bech32";if(!function(t){let e,n,r=!1,o=!1;for(e=0;e<t.length;++e){if(n=t.charCodeAt(e),n<33||n>126)return!1;n>=97&&n<=122&&(r=!0),n>=65&&n<=90&&(o=!0)}return!(r&&o)}(t))return{hrp:null,data:[255]};if(!function(t){const e=t.lastIndexOf("1");return!(e<1||e+7>t.length||t.length>90)}(t=t.toLowerCase()))return{hrp:null,data:[255]};const r=[],s=t.lastIndexOf("1"),i=t.substring(0,s);for(let e=s+1;e<t.length;++e){const n=o.indexOf(t.charAt(e));if(-1===n)return{hrp:null,data:[255]};r.push(n)}return function(t,e,n){return u(f(t).concat(e))===a(n)}(i,r,n)?{hrp:i,data:r.slice(0,r.length-6)}:{hrp:null,data:[255]}}function g(t,e=0){const n=t.split("1",1)[0],{hrp:r,data:o}=p(t,e),s=l(o.slice(1),5,8,!1),i=s.length;switch(!0){case n!==r:throw new Error("Returned hrp string is invalid.");case null===s||i<2||i>40:throw new Error("Decoded string is invalid or out of spec.");case o[0]>16:throw new Error("Returned version bit is out of range.");case 0===o[0]&&20!==i&&32!==i:throw new Error("Decoded string does not match version 0 spec.");case 0===o[0]&&0!==e:case 0!==o[0]&&1!==e:throw new Error("Decoded version bit does not match.");default:return Uint8Array.from(s)}}const d={encode:function(t,e="bch",n=0){const r=h(e,[n,...l([...t],8,5)],n>0?"bech32m":"bech32");return g(r,n),r},decode:g},y=new TextEncoder,w=new TextDecoder;function b(t){return y.encode(t).buffer}function m(t){return w.decode(t)}function A(t){let e,n=0;for(e=t.length-1;e>=0;e--)n=256*n+t[e];return Number(n)}function x(t){let e,n=0n;for(e=t.length-1;e>=0;e--)n=256n*n+BigInt(t[e]);return BigInt(n)}class U extends Uint8Array{constructor(t,e=null,n="be"){if(null!==e){const n=new Uint8Array(e).fill(0);n.set(new Uint8Array(t)),t=n.buffer}return super(t="le"===n?new Uint8Array(t).reverse():t),this}static{this.num=(t,e,n="le")=>new U(function(t){const e=[];for(;t>0;){const n=255&t;e.push(n),t=(t-n)/256}return Uint8Array.from(e)}(t),e,n)}static{this.big=(t,e,n="le")=>new U(function(t){const e=[];for(;t>0n;){const n=0xffn&t;e.push(Number(n)),t=(t-n)/256n}return Uint8Array.from(e)}(t),e,n)}static{this.buff=(t,e)=>new U(t,e)}static{this.str=(t,e)=>new U(b(t),e)}static{this.hex=(t,e)=>new U(function(t){const e=[];let n,r=0;if(t.length%2>0)throw new Error(`Invalid hex string length: ${t.length}`);for(n=0;n<t.length;n+=2)e[r]=parseInt(t.slice(n,n+2),16),r+=1;return Uint8Array.from(e).buffer}(t),e)}static{this.json=t=>new U(b(JSON.stringify(t)))}static{this.bech32=(t,e)=>new U(d.decode(t,e))}static{this.base58=t=>new U(r.decode(t,"base58"))}static{this.base64=t=>new U(r.decode(t,"base64"))}static{this.b64url=t=>new U(r.decode(t,"base64url"))}toNum(t="le"){return A("le"===t?this.reverse():this)}toBig(t="le"){return x("le"===t?this.reverse():this)}toArr(){return Array.from(this)}toStr(){return m(this)}toHex(){return function(t){const e=[];let n;for(n=0;n<t.length;n++)e.push(t[n].toString(16).padStart(2,"0"));return e.join("")}(this)}toJson(){return JSON.parse(m(this))}toBytes(){return new Uint8Array(this)}toBase58(){return r.encode(this,"base58")}toB64url(){return r.encode(this,"base64url")}toBech32(t,e){return d.encode(this,t,e)}toBase64(t){return r.encode(this,"base64",t)}prepend(t){return U.of(...t,...this)}append(t){return U.of(...this,...t)}slice(t,e){return new U(new Uint8Array(this).slice(t,e))}reverse(){return new U(new Uint8Array(this).reverse())}write(t,e){this.set(t,e)}prependVarint(t=this.length){return U.of(...U.readVarint(t),...this)}static from(t){return new U(Uint8Array.from(t))}static of(...t){return new U(Uint8Array.of(...t))}static join(t){let e,n=0;const r=t.reduce(((t,e)=>t+e.length),0),o=new Uint8Array(r);for(const r of t)for(e=0;e<r.length;n++,e++)o[n]=r[e];return new U(o,r)}static readVarint(t){if(t<253)return U.num(t,1);if(t<65536)return U.of(253,...U.num(t,2));if(t<4294967296)return U.of(254,...U.num(t,4));if(t<0x10000000000000000)return U.of(255,...U.num(t,8));throw new Error(`Value is too large: ${t}`)}static random(t=32){return new U(globalThis.crypto.getRandomValues(new Uint8Array(t)))}static{this.encode=b}static{this.decode=m}static normalize(t,e){if(t instanceof Uint8Array)return t;if("string"==typeof t)return U.hex(t,e).toBytes();if("number"==typeof t)return U.num(t,e).toBytes();if("bigint"==typeof t)return U.big(t,e).toBytes();throw TypeError("Unrecognized format: "+typeof t)}static serialize(t){if("string"==typeof t)return U.str(t).toBytes();if("object"==typeof t){if(t instanceof Uint8Array)return t;try{return U.json(t).toBytes()}catch{throw TypeError("Object is not serializable.")}}throw TypeError("Unrecognized format: "+typeof t)}static revitalize(t){if(t instanceof Uint8Array&&(t=m(t)),"string"==typeof t)try{return JSON.parse(t)}catch{return t}return t}}const v={null:t=>null===t,undefined:t=>void 0===t,hex:t=>function(t){switch(!0){case"string"!=typeof t:case/[^0-9a-fA-F]/.test(t):case t.length%2!=0:return!1;default:return!0}}(t),string:t=>"string"==typeof t,infinity:t=>t===1/0,bigint:t=>"bigint"==typeof t,number:t=>"number"==typeof t,class:t=>"object"==typeof t?.prototype&&t.toString().startsWith("class"),function:t=>"function"==typeof t,uint8:t=>t instanceof Uint8Array,uint16:t=>t instanceof Uint16Array,uint32:t=>t instanceof Uint32Array,buffer:t=>t instanceof ArrayBuffer,array:t=>Array.isArray(t),object:t=>"object"==typeof t};const E=v,B=/[\p{Lu}]/u,j=/[\p{Ll}]/u,C=/^[\p{Lu}](?![\p{Lu}])/gu,S=/([\p{Alpha}\p{N}_]|$)/u,T=/[_.\- ]+/,I=new RegExp("^"+T.source),N=new RegExp(T.source+S.source,"gu"),O=new RegExp("\\d+"+S.source,"gu");function q(t,e){if("string"!=typeof t&&!Array.isArray(t))throw new TypeError("Expected the input to be `string | string[]`");if(e={pascalCase:!1,preserveConsecutiveUppercase:!1,...e},0===(t=Array.isArray(t)?t.map((t=>t.trim())).filter((t=>t.length)).join("-"):t.trim()).length)return"";const n=!1===e.locale?t=>t.toLowerCase():t=>t.toLocaleLowerCase(e.locale),r=!1===e.locale?t=>t.toUpperCase():t=>t.toLocaleUpperCase(e.locale);if(1===t.length)return T.test(t)?"":e.pascalCase?r(t):n(t);return t!==n(t)&&(t=((t,e,n)=>{let r=!1,o=!1,s=!1;for(let i=0;i<t.length;i++){const c=t[i];r&&B.test(c)?(t=t.slice(0,i)+"-"+t.slice(i),r=!1,s=o,o=!0,i++):o&&s&&j.test(c)?(t=t.slice(0,i-1)+"-"+t.slice(i-1),s=o,o=!1,r=!0):(r=e(c)===c&&n(c)!==c,s=o,o=n(c)===c&&e(c)!==c)}return t})(t,n,r)),t=t.replace(I,""),t=e.preserveConsecutiveUppercase?((t,e)=>(C.lastIndex=0,t.replace(C,(t=>e(t)))))(t,n):n(t),e.pascalCase&&(t=r(t.charAt(0))+t.slice(1)),((t,e)=>(N.lastIndex=0,O.lastIndex=0,t.replace(N,((t,n)=>e(n))).replace(O,(t=>e(t)))))(t,r)}var L="@cmdcode/buff-utils";const z="../src/index.js";let R;async function $(t){R=t;const e=q(String("/"+L).split("/").at(-1)),n=await async function(t){if("undefined"!=typeof window)return window[t];const e=process?.argv&&process.argv.length>2?process.argv.slice(2,3):z;if(String(e).includes("main"))throw new Error("Unable to run tests on a commonJs module!");return console.log(`Testing package: ${e}`),import("../"+e).then((t=>t.default?t.default:t))}(e);J(n)}async function J(t,e=[]){for(const[n,r]of Object.entries(t))if(E.class(r)){const t=[...e,n];V(r,t),J(r,t),console.log("Registering tests for class:",n)}else if(E.function(r))D(n,r,e);else if(E.object(r)){J(r,[...e,n])}}async function V(t,e){const n=[...e,"new"];for(const e of Object.getOwnPropertyNames(t.prototype))D(e,t,n)}async function D(t,e,n){const r=`./api/${n.join("/").toLowerCase()}/${t}.test.js`;import(r).then((t=>{for(const n of Object.keys(t))R.test(r.split("/").at(-1),(r=>{console.log(`Running ${n} tests:\n`),t[n](r,e)}))})).catch((t=>{t.message.includes("Cannot find module")||console.log(`Failed to import test for: ${r}\n${t}`)}))}function H(t){const e=function(t=2164260863){return Math.floor(Math.random()*t)}(),n=BigInt(e),r=e.toString(16).padStart(8,"0"),o=U.num(e).toNum(),s=U.num(e).toBig(),i=U.big(n).toBig(),c=U.big(n).toNum(),a=U.hex(r).toHex(),u=U.hex(r).toNum(),f=U.hex(r).toBig(),l=U.num(e).toHex(),h=U.big(n).toHex();t.plan(9),t.equal(o,e,"num => num"),t.equal(s,n,"num => big"),t.equal(l,r,"num => hex"),t.equal(i,n,"big => big"),t.equal(c,e,"big => num"),t.equal(h,r,"big => hex"),t.equal(a,r,"hex => hex"),t.equal(u,e,"hex => num"),t.equal(f,n,"hex => big")}t("Bytes-utils Test Suite",(async t=>{t.test("API Tests",(async t=>{await $(t)})),t.test("Integrity Tests",(t=>{H(t)}))}))}(tape);

!function(e){"use strict";class t{static of(e){for(const[n,r]of Object.entries(t.is))if(r(e))return n;return"unknown"}}t.is={null:e=>null===e,undefined:e=>void 0===e,hex:e=>function(e){switch(!0){case"string"!=typeof e:case/[^0-9a-fA-F]/.test(e):case e.length%2!=0:return!1;default:return!0}}(e),string:e=>"string"==typeof e,infinity:e=>e===1/0,bigint:e=>"bigint"==typeof e,number:e=>"number"==typeof e,class:e=>"object"==typeof e.prototype,function:e=>"function"==typeof e,uint8:e=>e instanceof Uint8Array,uint16:e=>e instanceof Uint16Array,uint32:e=>e instanceof Uint32Array,buffer:e=>e instanceof ArrayBuffer,array:e=>Array.isArray(e),object:e=>"object"==typeof e},t.array={isString:e=>e.every((e=>t.is.string(e))),isNumber:e=>e.every((e=>t.is.number(e))),isBigint:e=>e.every((e=>t.is.bigint(e)))};const n=/[\p{Lu}]/u,r=/[\p{Ll}]/u,s=/^[\p{Lu}](?![\p{Lu}])/gu,o=/([\p{Alpha}\p{N}_]|$)/u,i=/[_.\- ]+/,c=new RegExp("^"+i.source),a=new RegExp(i.source+o.source,"gu"),l=new RegExp("\\d+"+o.source,"gu");function u(e,t){if("string"!=typeof e&&!Array.isArray(e))throw new TypeError("Expected the input to be `string | string[]`");if(t={pascalCase:!1,preserveConsecutiveUppercase:!1,...t},0===(e=Array.isArray(e)?e.map((e=>e.trim())).filter((e=>e.length)).join("-"):e.trim()).length)return"";const o=!1===t.locale?e=>e.toLowerCase():e=>e.toLocaleLowerCase(t.locale),u=!1===t.locale?e=>e.toUpperCase():e=>e.toLocaleUpperCase(t.locale);if(1===e.length)return i.test(e)?"":t.pascalCase?u(e):o(e);return e!==o(e)&&(e=((e,t,s)=>{let o=!1,i=!1,c=!1;for(let a=0;a<e.length;a++){const l=e[a];o&&n.test(l)?(e=e.slice(0,a)+"-"+e.slice(a),o=!1,c=i,i=!0,a++):i&&c&&r.test(l)?(e=e.slice(0,a-1)+"-"+e.slice(a-1),c=i,i=!1,o=!0):(o=t(l)===l&&s(l)!==l,c=i,i=s(l)===l&&t(l)!==l)}return e})(e,o,u)),e=e.replace(c,""),e=t.preserveConsecutiveUppercase?((e,t)=>(s.lastIndex=0,e.replace(s,(e=>t(e)))))(e,o):o(e),t.pascalCase&&(e=u(e.charAt(0))+e.slice(1)),((e,t)=>(a.lastIndex=0,l.lastIndex=0,e.replace(a,((e,n)=>t(n))).replace(l,(e=>t(e)))))(e,u)}var f="@cmdcode/bytes-utils";const p="src/index.js";function g(e,n=[]){for(const[r,s]of Object.entries(e))if(t.is.class(s)){const e=[...n,r];y(s,e),g(s,e),console.log("Registering tests for class:",r)}else if(t.is.function(s))d(r,s,n);else{if(t.is.object(s)){return g(s,[...n,r])}console.log(n,s)}}function y(e,t){const n=[...t,"new"];for(const t of Object.getOwnPropertyNames(e.prototype))d(t,e,n)}function d(t,n,r){const s=`./src/${r.join("/").toLowerCase()}/${t}.test.js`;import(s).then((t=>function(t,n,r){e(`Testing: ${r}`,(e=>{t(e,n)}))}(t.default,n,s))).catch((e=>e))}!async function(){const e=u(String("/"+f).split("/").at(-1)),t=await async function(e){if("undefined"!=typeof window)return window[e];const t=process?.argv&&process.argv.length>2?process.argv.slice(2,3):p;if(String(t).includes("main"))throw new Error("Unable to run tests on a commonJs module!");return console.log(`Testing package: ${t}`),import("../"+t).then((e=>e.default?e.default:e))}(e);await g(t)}()}(tape);
